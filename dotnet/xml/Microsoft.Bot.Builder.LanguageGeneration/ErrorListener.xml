<Type Name="ErrorListener" FullName="Microsoft.Bot.Builder.LanguageGeneration.ErrorListener">
  <TypeSignature Language="C#" Value="public class ErrorListener : Antlr4.Runtime.BaseErrorListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ErrorListener extends Antlr4.Runtime.BaseErrorListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.LanguageGeneration.ErrorListener" />
  <TypeSignature Language="VB.NET" Value="Public Class ErrorListener&#xA;Inherits BaseErrorListener" />
  <TypeSignature Language="F#" Value="type ErrorListener = class&#xA;    inherit BaseErrorListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
    <AssemblyVersion>4.9.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Antlr4.Runtime.BaseErrorListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            LG parser error listener.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorListener (string errorSource, int lineOffset = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string errorSource, int32 lineOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.ErrorListener.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (errorSource As String, Optional lineOffset As Integer = 0)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.LanguageGeneration.ErrorListener : string * int -&gt; Microsoft.Bot.Builder.LanguageGeneration.ErrorListener" Usage="new Microsoft.Bot.Builder.LanguageGeneration.ErrorListener (errorSource, lineOffset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="errorSource" Type="System.String" />
        <Parameter Name="lineOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorSource">To be added.</param>
        <param name="lineOffset">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyntaxError">
      <MemberSignature Language="C#" Value="public override void SyntaxError (Antlr4.Runtime.IRecognizer recognizer, Antlr4.Runtime.IToken offendingSymbol, int line, int charPositionInLine, string msg, Antlr4.Runtime.RecognitionException e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SyntaxError(class Antlr4.Runtime.IRecognizer recognizer, class Antlr4.Runtime.IToken offendingSymbol, int32 line, int32 charPositionInLine, string msg, class Antlr4.Runtime.RecognitionException e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.ErrorListener.SyntaxError(Antlr4.Runtime.IRecognizer,Antlr4.Runtime.IToken,System.Int32,System.Int32,System.String,Antlr4.Runtime.RecognitionException)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SyntaxError (recognizer As IRecognizer, offendingSymbol As IToken, line As Integer, charPositionInLine As Integer, msg As String, e As RecognitionException)" />
      <MemberSignature Language="F#" Value="override this.SyntaxError : Antlr4.Runtime.IRecognizer * Antlr4.Runtime.IToken * int * int * string * Antlr4.Runtime.RecognitionException -&gt; unit" Usage="errorListener.SyntaxError (recognizer, offendingSymbol, line, charPositionInLine, msg, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recognizer" Type="Antlr4.Runtime.IRecognizer">
          <Attributes>
            <Attribute>
              <AttributeName>Antlr4.Runtime.Misc.NotNull</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="offendingSymbol" Type="Antlr4.Runtime.IToken">
          <Attributes>
            <Attribute>
              <AttributeName>Antlr4.Runtime.Misc.Nullable</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="charPositionInLine" Type="System.Int32" />
        <Parameter Name="msg" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName>Antlr4.Runtime.Misc.NotNull</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Antlr4.Runtime.RecognitionException">
          <Attributes>
            <Attribute>
              <AttributeName>Antlr4.Runtime.Misc.Nullable</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="recognizer">To be added.</param>
        <param name="offendingSymbol">To be added.</param>
        <param name="line">To be added.</param>
        <param name="charPositionInLine">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
