<Type Name="Events&lt;TDialogEvents&gt;" FullName="Microsoft.Bot.Builder.Dialogs.Debugging.Events&lt;TDialogEvents&gt;">
  <TypeSignature Language="C#" Value="public sealed class Events&lt;TDialogEvents&gt; : Microsoft.Bot.Builder.Dialogs.Debugging.IEvents where TDialogEvents : DialogEvents" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Events`1&lt;(class Microsoft.Bot.Builder.Dialogs.DialogEvents) TDialogEvents&gt; extends System.Object implements class Microsoft.Bot.Builder.Dialogs.Debugging.IEvents" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Dialogs.Debugging.Events`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Events(Of TDialogEvents)&#xA;Implements IEvents" />
  <TypeSignature Language="F#" Value="type Events&lt;'DialogEvents (requires 'DialogEvents :&gt; DialogEvents)&gt; = class&#xA;    interface IEvents" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Dialogs.Debugging</AssemblyName>
    <AssemblyVersion>4.9.2.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TDialogEvents">
      <Constraints>
        <BaseTypeName>Microsoft.Bot.Builder.Dialogs.DialogEvents</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Dialogs.Debugging.IEvents</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TDialogEvents">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Events (System.Collections.Generic.IEnumerable&lt;string&gt; filters = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Debugging.Events`1.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional filters As IEnumerable(Of String) = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Dialogs.Debugging.Events&lt;'DialogEvents (requires 'DialogEvents :&gt; Microsoft.Bot.Builder.Dialogs.DialogEvents)&gt; : seq&lt;string&gt; -&gt; Microsoft.Bot.Builder.Dialogs.Debugging.Events&lt;'DialogEvents (requires 'DialogEvents :&gt; Microsoft.Bot.Builder.Dialogs.DialogEvents)&gt;" Usage="new Microsoft.Bot.Builder.Dialogs.Debugging.Events&lt;'DialogEvents (requires 'DialogEvents :&gt; Microsoft.Bot.Builder.Dialogs.DialogEvents)&gt; filters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs.Debugging</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="filters">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Filters">
      <MemberSignature Language="C#" Value="Microsoft.Bot.Builder.Dialogs.Debugging.Protocol.ExceptionBreakpointFilter[] Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Filters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.Dialogs.Debugging.Protocol/ExceptionBreakpointFilter[] Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Filters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Dialogs.Debugging.Events`1.Microsoft#Bot#Builder#Dialogs#Debugging#IEvents#Filters" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Filters As Protocol.ExceptionBreakpointFilter() Implements IEvents.Filters" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Filters : Microsoft.Bot.Builder.Dialogs.Debugging.Protocol.ExceptionBreakpointFilter[]" Usage="Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Filters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Filters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs.Debugging</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Dialogs.Debugging.Protocol+ExceptionBreakpointFilter[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Item">
      <MemberSignature Language="C#" Value="bool Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Item[string filter] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Dialogs.Debugging.Events`1.Microsoft#Bot#Builder#Dialogs#Debugging#IEvents#Item(System.String)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(filter As String) As Boolean Implements IEvents.Item" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Item(string) : bool with get, set" Usage="Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Item(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs.Debugging</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Reset">
      <MemberSignature Language="C#" Value="void IEvents.Reset (System.Collections.Generic.IEnumerable&lt;string&gt; filters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Reset(class System.Collections.Generic.IEnumerable`1&lt;string&gt; filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Debugging.Events`1.Microsoft#Bot#Builder#Dialogs#Debugging#IEvents#Reset(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Sub Reset (filters As IEnumerable(Of String)) Implements IEvents.Reset" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Reset : seq&lt;string&gt; -&gt; unit&#xA;override this.Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Reset : seq&lt;string&gt; -&gt; unit" Usage="events.Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Reset filters" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Dialogs.Debugging.IEvents.Reset(System.Collections.Generic.IEnumerable{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs.Debugging</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="filters">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
